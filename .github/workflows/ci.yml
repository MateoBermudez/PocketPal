name: CI Pipeline

on:
  push:
    branches:
      - main
      - develop
      - feature/*
  pull_request:
    branches:
      - main
      - develop
      - feature/*

jobs:
  build:
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        microservice:
          - name: eureka-server
            envs: [] # No secrets needed
          - name: api-gateway
            envs:
              - INTERNAL_API_KEY
              - JWT_SECRET
          - name: user-microservice
            envs:
              - DB_URL
              - DB_USERNAME
              - DB_PASSWORD
              - JWT_SECRET
              - INTERNAL_API_KEY
              - OAUTH2_GOOGLE_CLIENT_ID
              - OAUTH2_GOOGLE_CLIENT_SECRET
              - EMAIL_HOST
              - EMAIL_PORT
              - EMAIL_USERNAME
              - EMAIL_PASSWORD
              - ENCRYPTION_SECRET
              - RABBITMQ_USERNAME
              - RABBITMQ_PASSWORD
          - name: log-microservice
            envs:
              - DB_URL
              - DB_USERNAME
              - DB_PASSWORD

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Start H2 Database
        run: |
          docker run --name h2 -d -p 9092:9092 -p 8082:8082 oscarfonts/h2

      - name: Wait for H2 to be ready
        run: |
          sleep 10

      - name: Build microservice
        env:
          INTERNAL_API_KEY: ${{ secrets.INTERNAL_API_KEY }}
          DB_URL: ${{ secrets.DB_URL }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          OAUTH2_GOOGLE_CLIENT_ID: ${{ secrets.OAUTH2_GOOGLE_CLIENT_ID }}
          OAUTH2_GOOGLE_CLIENT_SECRET: ${{ secrets.OAUTH2_GOOGLE_CLIENT_SECRET }}
          EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
          EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
          EMAIL_USERNAME: ${{ secrets.EMAIL_USERNAME }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
          ENCRYPTION_SECRET: ${{ secrets.ENCRYPTION_SECRET }}
          RABBITMQ_USERNAME: ${{ secrets.RABBITMQ_USERNAME }}
          RABBITMQ_PASSWORD: ${{ secrets.RABBITMQ_PASSWORD }}
        run: |
          cd backend/${{ matrix.microservice.name }}
          ./mvnw clean install -DskipTests

      - name: Run tests
        env:
          INTERNAL_API_KEY: ${{ secrets.INTERNAL_API_KEY }}
          DB_URL: ${{ secrets.DB_URL }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          OAUTH2_GOOGLE_CLIENT_ID: ${{ secrets.OAUTH2_GOOGLE_CLIENT_ID }}
          OAUTH2_GOOGLE_CLIENT_SECRET: ${{ secrets.OAUTH2_GOOGLE_CLIENT_SECRET }}
          EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
          EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
          EMAIL_USERNAME: ${{ secrets.EMAIL_USERNAME }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
          ENCRYPTION_SECRET: ${{ secrets.ENCRYPTION_SECRET }}
          RABBITMQ_USERNAME: ${{ secrets.RABBITMQ_USERNAME }}
          RABBITMQ_PASSWORD: ${{ secrets.RABBITMQ_PASSWORD }}
        run: |
          cd backend/${{ matrix.microservice.name }}
          ./mvnw test

      - name: Stop H2 Database
        run: |
          docker stop h2
          docker rm h2
